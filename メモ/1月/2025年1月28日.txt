【オブジェクト型】
interfaceはオブジェクトに名前をつけることができる。
構造的部分型を採用している。オブジェクトリレテラルの場合は弾かれる。

【配列型】
配列型の宣言には各カッコを使用する。
Array<T>も使用できる。（できるようになった）

【タプル型】
関数から複数の値を返したいときに配列に入れてまとめて返す配列。特定の方である必要はない。
[string, number?]のように？があるとその引数はなくても良い扱いになる。

【Union型（合併型）】
string | numberという型は「stringまたはnumberである値の型」、すなわち「文字列または数値の型」となる。

【nullチェック】
function func(value: string | null): number {
  return value != null && value.length || 0;
}

【intersection型（交差型）】
2つの型T, Uに対してT & Uと書くと、TでもありUでもあるような型を表す。